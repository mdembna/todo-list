{"map":"{\"version\":3,\"sources\":[\"/Users/magdalenadembna/Desktop/Projects/MDB-React-Free-npm/src/components/TodoList.js\",\"/Users/magdalenadembna/Desktop/Projects/MDB-React-Free-npm/src/App.js\",\"/Users/magdalenadembna/Desktop/Projects/MDB-React-Free-npm/src/registerServiceWorker.js\",\"/Users/magdalenadembna/Desktop/Projects/MDB-React-Free-npm/src/index.js\",\"/Users/magdalenadembna/Desktop/Projects/MDB-React-Free-npm/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-4-0!/Users/magdalenadembna/Desktop/Projects/MDB-React-Free-npm/node_modules/css-loader/index.js??ref--6-oneOf-4-1!/Users/magdalenadembna/Desktop/Projects/MDB-React-Free-npm/node_modules/postcss-loader/src/index.js??postcss!/Users/magdalenadembna/Desktop/Projects/MDB-React-Free-npm/src/css-modules/TodoList.module.css\"],\"names\":[\"TodoList\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"userInput\",\"taskList\",\"input\",\"setState\",\"list\",\"toConsumableArray\",\"push\",\"key\",\"length\",\"pop\",\"_this2\",\"placeholder\",\"react_default\",\"a\",\"createElement\",\"mdbreact_esm\",\"className\",\"styles\",\"card\",\"form\",\"htmlFor\",\"id\",\"user_input\",\"type\",\"onChange\",\"e\",\"changeUserInput\",\"target\",\"value\",\"btn\",\"color\",\"onClick\",\"addTask\",\"no_tasks\",\"task_list\",\"map\",\"task\",\"number\",\"btn_group\",\"outline\",\"removeTask\",\"clearList\",\"Component\",\"App\",\"style\",\"display\",\"justifyContent\",\"TodoList_TodoList\",\"isLocalhost\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"registerValidSW\",\"swUrl\",\"navigator\",\"serviceWorker\",\"register\",\"then\",\"registration\",\"onupdatefound\",\"installingWorker\",\"installing\",\"onstatechange\",\"controller\",\"console\",\"log\",\"catch\",\"error\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"URL\",\"process\",\"origin\",\"addEventListener\",\"concat\",\"fetch\",\"response\",\"status\",\"headers\",\"get\",\"indexOf\",\"ready\",\"unregister\",\"reload\",\"checkValidServiceWorker\",\"registerServiceWorker\",\"module\",\"exports\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { Component } from \\\"react\\\";\\nimport { MDBBtn, MDBCard, MDBListGroup, MDBListGroupItem } from \\\"mdbreact\\\";\\nimport styles from \\\"../css-modules/TodoList.module.css\\\";\\n\\nexport default class TodoList extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      userInput: \\\"\\\",\\n      taskList: []\\n    };\\n  }\\n\\n  changeUserInput(input) {\\n    this.setState({\\n      userInput: input\\n    });\\n  }\\n\\n  addTask(input) {\\n    if (input !== \\\"\\\") {\\n      let list = [...this.state.taskList];\\n      list.push({ input: input, key: list.length + 1 })\\n      this.setState({\\n        userInput: \\\"\\\",\\n        taskList: list\\n      })\\n    }\\n  }\\n\\n  removeTask() {\\n    let list = [...this.state.taskList];\\n    list.pop();\\n    this.setState({\\n      taskList: list\\n    });\\n  }\\n\\n  clearList() {\\n    this.setState({\\n      taskList: []\\n    });\\n  }\\n\\n  render() {\\n    let placeholder =\\n      \\\"task number \\\" + (this.state.taskList.length + 1) + \\\": ...\\\";\\n\\n    return (\\n      <div>\\n        <MDBCard className={styles.card}>\\n          <div className={styles.form}>\\n            <label className=\\\"sr-only\\\" htmlFor=\\\"userInput\\\">\\n              Task\\n            </label>\\n            <input\\n              id=\\\"userInput\\\"\\n              className={styles.user_input}\\n              type=\\\"text\\\"\\n              onChange={e => this.changeUserInput(e.target.value)}\\n              value={this.state.userInput}\\n              placeholder={placeholder}\\n            />\\n            <MDBBtn\\n              className={styles.btn}\\n              color=\\\"blue-grey\\\"\\n              onClick={() => this.addTask(this.state.userInput)}\\n            >\\n              add\\n            </MDBBtn>\\n          </div>\\n\\n          {this.state.taskList.length === 0 ? (\\n            <div className={styles.no_tasks}>\\n              no tasks for today! <i className=\\\"fas fa-smile\\\" />{\\\" \\\"}\\n            </div>\\n          ) : null}\\n\\n          <MDBListGroup className={styles.task_list}>\\n            {this.state.taskList.map(task => (\\n              <MDBListGroupItem key={task.key} className={styles.task}>\\n                <em className={styles.number}>task number {task.key}:</em>\\n                {task.input}\\n              </MDBListGroupItem>\\n            ))}\\n          </MDBListGroup>\\n        </MDBCard>\\n\\n        <div className={styles.btn_group}>\\n          <MDBBtn\\n            outline\\n            onClick={() => this.removeTask(this.state.userInput)}\\n            className={styles.btn}\\n          >\\n            remove\\n          </MDBBtn>\\n          <MDBBtn\\n            onClick={() => this.clearList(this.state.userInput)}\\n            className={styles.btn}\\n          >\\n            clear\\n          </MDBBtn>\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\",\"import React, { Component } from \\\"react\\\";\\nimport TodoList from \\\"./components/TodoList.js\\\";\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <div style={{display: \\\"flex\\\", justifyContent: \\\"center\\\"}}>\\n        <TodoList />\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// In production, we register a service worker to serve assets from local cache.\\r\\n\\r\\n// This lets the app load faster on subsequent visits in production, and gives\\r\\n// it offline capabilities. However, it also means that developers (and users)\\r\\n// will only see deployed updates on the \\\"N+1\\\" visit to a page, since previously\\r\\n// cached resources are updated in the background.\\r\\n\\r\\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\\r\\n// This link also includes instructions on opting out of this behavior.\\r\\n\\r\\nconst isLocalhost = Boolean(\\r\\n  window.location.hostname === \\\"localhost\\\" ||\\r\\n    // [::1] is the IPv6 localhost address.\\r\\n    window.location.hostname === \\\"[::1]\\\" ||\\r\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\r\\n    window.location.hostname.match(\\r\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\r\\n    )\\r\\n);\\r\\n\\r\\nexport default function register() {\\r\\n  if (process.env.NODE_ENV === \\\"production\\\" && \\\"serviceWorker\\\" in navigator) {\\r\\n    // The URL constructor is available in all browsers that support SW.\\r\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\r\\n    if (publicUrl.origin !== window.location.origin) {\\r\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\r\\n      // from what our page is served on. This might happen if a CDN is used to\\r\\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\\r\\n      return;\\r\\n    }\\r\\n\\r\\n    window.addEventListener(\\\"load\\\", () => {\\r\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\r\\n\\r\\n      if (!isLocalhost) {\\r\\n        // Is not local host. Just register service worker\\r\\n        registerValidSW(swUrl);\\r\\n      } else {\\r\\n        // This is running on localhost. Lets check if a service worker still exists or not.\\r\\n        checkValidServiceWorker(swUrl);\\r\\n      }\\r\\n    });\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction registerValidSW(swUrl) {\\r\\n  navigator.serviceWorker\\r\\n    .register(swUrl)\\r\\n    .then(registration => {\\r\\n      registration.onupdatefound = () => {\\r\\n        const installingWorker = registration.installing;\\r\\n        installingWorker.onstatechange = () => {\\r\\n          if (installingWorker.state === \\\"installed\\\") {\\r\\n            if (navigator.serviceWorker.controller) {\\r\\n              // At this point, the old content will have been purged and\\r\\n              // the fresh content will have been added to the cache.\\r\\n              // It's the perfect time to display a \\\"New content is\\r\\n              // available; please refresh.\\\" message in your web app.\\r\\n              console.log(\\\"New content is available; please refresh.\\\");\\r\\n            } else {\\r\\n              // At this point, everything has been precached.\\r\\n              // It's the perfect time to display a\\r\\n              // \\\"Content is cached for offline use.\\\" message.\\r\\n              console.log(\\\"Content is cached for offline use.\\\");\\r\\n            }\\r\\n          }\\r\\n        };\\r\\n      };\\r\\n    })\\r\\n    .catch(error => {\\r\\n      console.error(\\\"Error during service worker registration:\\\", error);\\r\\n    });\\r\\n}\\r\\n\\r\\nfunction checkValidServiceWorker(swUrl) {\\r\\n  // Check if the service worker can be found. If it can't reload the page.\\r\\n  fetch(swUrl)\\r\\n    .then(response => {\\r\\n      // Ensure service worker exists, and that we really are getting a JS file.\\r\\n      if (\\r\\n        response.status === 404 ||\\r\\n        response.headers.get(\\\"content-type\\\").indexOf(\\\"javascript\\\") === -1\\r\\n      ) {\\r\\n        // No service worker found. Probably a different app. Reload the page.\\r\\n        navigator.serviceWorker.ready.then(registration => {\\r\\n          registration.unregister().then(() => {\\r\\n            window.location.reload();\\r\\n          });\\r\\n        });\\r\\n      } else {\\r\\n        // Service worker found. Proceed as normal.\\r\\n        registerValidSW(swUrl);\\r\\n      }\\r\\n    })\\r\\n    .catch(() => {\\r\\n      console.log(\\r\\n        \\\"No internet connection found. App is running in offline mode.\\\"\\r\\n      );\\r\\n    });\\r\\n}\\r\\n\\r\\nexport function unregister() {\\r\\n  if (\\\"serviceWorker\\\" in navigator) {\\r\\n    navigator.serviceWorker.ready.then(registration => {\\r\\n      registration.unregister();\\r\\n    });\\r\\n  }\\r\\n}\\r\\n\",\"import React from \\\"react\\\";\\nimport ReactDOM from \\\"react-dom\\\";\\nimport \\\"@fortawesome/fontawesome-free/css/all.min.css\\\";\\nimport \\\"bootstrap-css-only/css/bootstrap.min.css\\\";\\nimport \\\"mdbreact/dist/css/mdb.css\\\";\\nimport \\\"./index.css\\\";\\nimport App from \\\"./App\\\";\\n\\nimport registerServiceWorker from './registerServiceWorker';\\n\\nReactDOM.render( <App /> , document.getElementById('root'));\\n\\nregisterServiceWorker();\",\"// extracted by mini-css-extract-plugin\\nmodule.exports = {\\\"card\\\":\\\"TodoList_card__32B2_\\\",\\\"btn\\\":\\\"TodoList_btn__2nfe0\\\",\\\"form\\\":\\\"TodoList_form__QUMoJ\\\",\\\"user_input\\\":\\\"TodoList_user_input__3vwIA\\\",\\\"task_list\\\":\\\"TodoList_task_list__2__-v\\\",\\\"no_tasks\\\":\\\"TodoList_no_tasks__S9dXt\\\",\\\"number\\\":\\\"TodoList_number__2n6cm\\\",\\\"btn_group\\\":\\\"TodoList_btn_group__2lqe7\\\",\\\"task\\\":\\\"TodoList_task__2wDwI\\\"};\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{100:function(t,e,n){\"use strict\";n.r(e);var a=n(1),s=n.n(a),o=n(6),r=n.n(o),i=(n(41),n(43),n(45),n(47),n(17)),c=n(18),l=n(20),u=n(19),d=n(21),m=n(24),f=n(8),k=n(5),p=n.n(k),h=function(t){function e(t){var n;return Object(i.a)(this,e),(n=Object(l.a)(this,Object(u.a)(e).call(this,t))).state={userInput:\"\",taskList:[]},n}return Object(d.a)(e,t),Object(c.a)(e,[{key:\"changeUserInput\",value:function(t){this.setState({userInput:t})}},{key:\"addTask\",value:function(t){if(\"\"!==t){var e=Object(m.a)(this.state.taskList);e.push({input:t,key:e.length+1}),this.setState({userInput:\"\",taskList:e})}}},{key:\"removeTask\",value:function(){var t=Object(m.a)(this.state.taskList);t.pop(),this.setState({taskList:t})}},{key:\"clearList\",value:function(){this.setState({taskList:[]})}},{key:\"render\",value:function(){var t=this,e=\"task number \"+(this.state.taskList.length+1)+\": ...\";return s.a.createElement(\"div\",null,s.a.createElement(f.b,{className:p.a.card},s.a.createElement(\"div\",{className:p.a.form},s.a.createElement(\"label\",{className:\"sr-only\",htmlFor:\"userInput\"},\"Task\"),s.a.createElement(\"input\",{id:\"userInput\",className:p.a.user_input,type:\"text\",onChange:function(e){return t.changeUserInput(e.target.value)},value:this.state.userInput,placeholder:e}),s.a.createElement(f.a,{className:p.a.btn,color:\"blue-grey\",onClick:function(){return t.addTask(t.state.userInput)}},\"add\")),0===this.state.taskList.length?s.a.createElement(\"div\",{className:p.a.no_tasks},\"no tasks for today! \",s.a.createElement(\"i\",{className:\"fas fa-smile\"}),\" \"):null,s.a.createElement(f.c,{className:p.a.task_list},this.state.taskList.map(function(t){return s.a.createElement(f.d,{key:t.key,className:p.a.task},s.a.createElement(\"em\",{className:p.a.number},\"task number \",t.key,\":\"),t.input)}))),s.a.createElement(\"div\",{className:p.a.btn_group},s.a.createElement(f.a,{outline:!0,onClick:function(){return t.removeTask(t.state.userInput)},className:p.a.btn},\"remove\"),s.a.createElement(f.a,{onClick:function(){return t.clearList(t.state.userInput)},className:p.a.btn},\"clear\")))}}]),e}(a.Component),_=function(t){function e(){return Object(i.a)(this,e),Object(l.a)(this,Object(u.a)(e).apply(this,arguments))}return Object(d.a)(e,t),Object(c.a)(e,[{key:\"render\",value:function(){return s.a.createElement(\"div\",{style:{display:\"flex\",justifyContent:\"center\"}},s.a.createElement(h,null))}}]),e}(a.Component),v=Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function b(t){navigator.serviceWorker.register(t).then(function(t){t.onupdatefound=function(){var e=t.installing;e.onstatechange=function(){\"installed\"===e.state&&(navigator.serviceWorker.controller?console.log(\"New content is available; please refresh.\"):console.log(\"Content is cached for offline use.\"))}}}).catch(function(t){console.error(\"Error during service worker registration:\",t)})}r.a.render(s.a.createElement(_,null),document.getElementById(\"root\")),function(){if(\"serviceWorker\"in navigator){if(new URL(\"/todo-list\",window.location).origin!==window.location.origin)return;window.addEventListener(\"load\",function(){var t=\"\".concat(\"/todo-list\",\"/service-worker.js\");v?function(t){fetch(t).then(function(e){404===e.status||-1===e.headers.get(\"content-type\").indexOf(\"javascript\")?navigator.serviceWorker.ready.then(function(t){t.unregister().then(function(){window.location.reload()})}):b(t)}).catch(function(){console.log(\"No internet connection found. App is running in offline mode.\")})}(t):b(t)})}}()},36:function(t,e,n){t.exports=n(100)},47:function(t,e,n){},5:function(t,e,n){t.exports={card:\"TodoList_card__32B2_\",btn:\"TodoList_btn__2nfe0\",form:\"TodoList_form__QUMoJ\",user_input:\"TodoList_user_input__3vwIA\",task_list:\"TodoList_task_list__2__-v\",no_tasks:\"TodoList_no_tasks__S9dXt\",number:\"TodoList_number__2n6cm\",btn_group:\"TodoList_btn_group__2lqe7\",task:\"TodoList_task__2wDwI\"}}},[[36,2,1]]]);","extractedComments":[]}